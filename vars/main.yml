---
# vars file for tendenci

# Name of this tendenci install
install_name: "tendenci"
# These paths use it for cooinstallability but you can choose different paths.
virtualenv_install_dir: "/srv/{{ install_name }}/environment"
website_install_dir: "/srv/{{ install_name }}/website"

postgres_connection_user: "{{ install_name }}_user"
# Password will be encrypted by postgresql during user creation
postgres_connection_pass: "" # TODO: auto generate one
postgres_database_name:   "{{ install_name }}_db"


# Use upstream defaults, people should override it themselves
site_secret_key: ""
site_settings_key: ""

superuser_username: "admin"
# As with keys, user should override.
# superuser_password: "" not used yet
superuser_email: "admin@example.com"

# Set false to prevent all nginx configuration (eg for custom/external configuration)
perform_nginx_configuration: true
# DNS name of server
server_visible_name: localhost
server_visible_port: 80

tendenci_bind_address: 127.0.0.1
tendenci_bind_port: 8080

custom_theme_name: ""

# Pre populate the site with data (eg for demo purposes)
load_base_defaults: false
load_npo_defaults: false

enable_mailserver: false

tendenci_run_as_user: www-data
tendenci_run_as_group: www-data

# Only enable if running an enforcing system. 
configure_selinux: false

# For franklinkim.apt
apt_packages:
 - git
 - python-dev           # for pip to build compiled modules against
 - libjpeg-dev          # for image manipulation
 # - git                  # use currently unknown
 - python-pip           # manage install process for python modules
 - python-virtualenv    # create virtual environment for python packages to be installed in
 - python-psycopg2      # ansible needs this for the postgresql_* modules
 - build-essential      # provide packages needed for compilation (used by pip)
 - memcached            # in memory cache to boost performance
 - libmemcached-dev     # enable linking against memcache for pip
 - nginx                # front end web server

# For bennojoy.memcached
memcached_cache_size: 256       # The cache size in MB

# For ANXS.postgresql
postgresql_version: 9.4
postgresql_encoding: 'UTF-8'
postgresql_locale: 'en_AU.UTF-8'

postgresql_admin_user: "postgres"
postgresql_default_auth_method: "trust"

# Install contrib
postgresql_ext_install_contrib: true
# Install development headers
postgresql_ext_install_dev_headers: true
# Install postgis
postgresql_ext_install_postgis: true

# List of databases to be created (optional)
postgresql_databases:
  - name: "{{ postgres_database_name }}"
    hstore: no         # flag to install the hstore extension on this database (yes/no)
    uuid_ossp: no      # flag to install the uuid-ossp extension on this database (yes/no)
    owner: "{{ postgres_connection_user }}"

# List of users to be created (optional)
postgresql_users:
  - name: "{{ postgres_connection_user }}"
    pass: "{{ postgres_connection_pass }}"
    encrypted: no       # denotes if the password is already encrypted.

# List of user privileges to be applied (optional)
postgresql_user_privileges:
  - name: "{{ postgres_connection_user }}"                   # user name
    db: "{{ postgres_database_name }}"                  # database
    priv: "ALL"                 # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
    role_attr_flags: "CREATEDB" # role attribute flags

# For tersmitten.postfix
postfix_aliases:
  - { user: root, alias: you@yourdomain.org }
  - { user: webmaster, alias: you@yourdomain.org }
  - { user: webmaster, alias: you@yourdomain.org }
postfix_relayhost: mail.yourdomain.org

